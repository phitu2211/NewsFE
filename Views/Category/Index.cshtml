@model NewsFE.Helper.PaginatedList<Post>
@using NewsFE.Extensions

@{
    ViewData["Title"] = "Danh mục";
}

<section id="contentSection">
    <div class="row">
        <div class="col-lg-8 col-md-8 col-sm-8">
            <div class="left_content">
                <div class="single_post_content">
                    @*<h2><span>@Model.category</span></h2>*@
                    <ul class="spost_nav" id="business-nav">
                        @foreach (var post in Model)
                        {
                            String href = "/post/" + post.title.NonUnicode().FriendlyUrl() + "-id=" + post.id;
                            <li>
                                <div class="media wow fadeInDown animated" style="visibility: visible; animation-name: fadeInDown;">
                                    <a href="@href" class="media-left">
                                        <img alt="" src="@post.urlImage">
                                    </a>
                                    <div class="media-body">
                                        <a href="@href" class="catg_title">
                                            <h1 style="font-size: 20px; margin-top: 10px;">@post.title</h1>
                                        </a>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div style="text-align:center;">
                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                        var prevPage = Model.PageIndex - 1 + "";
                        var nextPage = Model.PageIndex + 1 + "";
                    }

                    <a asp-action="Index"
                       asp-route-pageNumber="@(1)"
                       class="btn btn-default @prevDisabled">
                        First Page
                    </a>
                    @if (Model.HasPreviousPage)
                    {
                        <a asp-action="Index"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           class="btn btn-default">
                            @prevPage
                        </a>
                    }

                    <a class="btn btn-default">
                        @Html.DisplayFor(model => model.PageIndex)
                    </a>

                    @if (Model.HasNextPage)
                    {
                        <a asp-action="Index"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           class="btn btn-default">
                            @nextPage
                        </a>
                    }
                    <a asp-action="Index"
                       asp-route-pageNumber="@(Model.TotalPage)"
                       class="btn btn-default @nextDisabled">
                        Last Page
                    </a>
                </div>
            </div>
        </div>
        @await Component.InvokeAsync("RightContentComponent")
    </div>
</section>



